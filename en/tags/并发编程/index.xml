<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>并发编程 on YanHuan&#39;s World</title>
    <link>https://yanhuan0802.github.io/en/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 并发编程 on YanHuan&#39;s World</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Nov 2023 23:21:14 +0800</lastBuildDate>
    <atom:link href="https://yanhuan0802.github.io/en/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Context 那些事儿</title>
      <link>https://yanhuan0802.github.io/en/posts/go-context/</link>
      <pubDate>Fri, 30 Jun 2023 21:55:43 +0800</pubDate>
      <guid>https://yanhuan0802.github.io/en/posts/go-context/</guid>
      <description>&lt;p&gt;context 是 Go 语言应用开发常用的并发控制技术，可以用来控制多级的 goroutine，实现 goroutine 之间退出通知、元数据传递等功能。在本篇文章中，我们将从 context 的设计实现以及 context 包相关源码进行解读，帮助大家更好地理解和使用 context 包。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入理解 Go Channel 底层实现</title>
      <link>https://yanhuan0802.github.io/en/posts/explore-go-channel/</link>
      <pubDate>Sun, 14 May 2023 21:53:50 +0800</pubDate>
      <guid>https://yanhuan0802.github.io/en/posts/explore-go-channel/</guid>
      <description>&lt;p&gt;Channel 是 Go 语言的核心数据结构，也是支撑 Go 高性能并发编程的重要结构。在本篇文章中，我们将从 channel 的设计原理、数据结构、发送数据、接收数据以及关闭 channel 这几个方面进行一些深入的分析，帮助大家更好地理解 channel 的工作原理。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
